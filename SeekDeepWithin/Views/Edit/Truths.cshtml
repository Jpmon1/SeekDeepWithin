@using SeekDeepWithin.Pocos
@model List<SeekDeepWithin.Pocos.Truth>
@{
   var color = "white";
   var otherLoves = (Dictionary<int, Love>) ViewBag.OtherLoves;
}
@foreach (var truth in Model.OrderBy(t => t.Order ?? 0)) {
   color = color == "white" ? "#C0C0C0" : "white";
   var text = truth.Light != null ? truth.Light.Text : string.Empty;
   if (string.IsNullOrEmpty (text) && truth.ParentId.HasValue) {
      var parent = otherLoves.FirstOrDefault (kvp => kvp.Key == truth.ParentId).Value;
      if (parent != null) {
         text = parent.Peaces.Aggregate (string.Empty, (current, peace) => current + (peace.Light.Text + " | ")).TrimEnd ('|', ' ');
      }
   }
   if (string.IsNullOrEmpty (text)) {
      text = string.Format ("Unknown truth: '{0}' in love: '{1}'", truth.Id, truth.Love.Id);
   }
   <div class="row" id="ct@(truth.Id)" style="background-color: @(color); padding: 0.25rem;">
      <div class="small-10 medium-11 large-11 column" style="font-size: x-small;">
         @if (truth.Order.HasValue) {<span>O(@(truth.Order.Value)) | </span>}
         @if (truth.Number.HasValue) {<span>N(@(truth.Number.Value)) | </span>}
         @(text)
      </div>
      <div class="small-2 medium-1 large-1 column">
         @if (ViewBag.IsLink != null) {
            if (ViewBag.IsLink) {
                <a id="addAs" class="sdw-button white expand tiny" title="Link">&prop;</a>
             } else {
                <a id="edit" class="sdw-button alt expand tiny" title="Edit">&or;</a>
             }
         }
      </div>
   </div>
}