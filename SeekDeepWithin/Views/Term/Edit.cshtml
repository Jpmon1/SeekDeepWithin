@model SeekDeepWithin.Models.GlossaryTermViewModel

@{
    ViewBag.Title = "Editing "+ Model.Name;
}

<h3><small>editing</small> @Model.Name</h3>
@using (Html.BeginForm (null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" })){
   @Html.AntiForgeryToken()
}

<input type="hidden" id="TermId" name="TermId" value="@Model.Id" />

<div class="row">
   <div class="small-6 columns">
      <a href="@Url.Action("Index", "Term", new {id=Model.Id}, Request.Url.Scheme)" class="button expand secondary">
         <i class="icon-preview"></i> view term
      </a>
   </div>
   <div class="small-6 columns">
      <a href="@Url.Action("EditSeeAlso", "Link", new {id=Model.Id}, Request.Url.Scheme)" class="button expand" id="btnEditLinks">
         <i class="icon-editalt"></i> Edit See Also's
      </a>
   </div>
</div>

<div class="row">
   <div class="small-12 large-6 columns">
      @using (Html.BeginForm()) {
         @Html.AntiForgeryToken()
         @Html.ValidationSummary(true)

         <fieldset>
            <legend>Term Name</legend>
       
            <div class="row">
               <div class="small-12 columns">
                  <div class="row collapse">
                     <div class="small-9 columns">
                        <input type="text" id="Name" name="Name" value="@Model.Name">
                     </div>
                     <div class="small-3 columns">
                        <input type="submit" value="Save" class="button postfix" />
                     </div>
                  </div>
               </div>
            </div>
         </fieldset>
      }
   </div>
   <div class="small-12 large-6 columns">
      <fieldset>
         <legend>
            Tags 
            @if (Request.IsAuthenticated && User.IsInRole ("Creator")) {
               var returnUrl = Request.Url != null ? Request.Url.ToString () : string.Empty;
               <span style="font-size: small">
                  <a href="@Url.Action("Create", "Tag", new {returnUrl}, Request.Url.Scheme)">new tag</a>
               </span>
            }
         </legend>
         <div class="row">
            <div class="small-12 columns">
               <div class="row collapse">
                  <div class="small-9 columns">
                     @Html.DropDownList("tagId", ViewBag.Tags as SelectList)
                  </div>
                  <div class="small-3 columns">
                     <button class="button success postfix" onclick="tag_add(@Model.Id, 'Term');">
                        <i class="icon-plus"></i> Add
                     </button>
                  </div>
               </div>
            </div>
         </div>
         @foreach (var tag in Model.Tags) {
            var id = tag.ItemId;
            <div class="row" id="tag_@id">
               <div class="small-10 columns">
                  @Html.ActionLink(tag.Name, "Details", "Tag", new { id = tag.Id }, null)
               </div>
               <div class="small-2 columns text-right">
                  <a href="javascript:void(0);" onclick="tag_remove(@id, @Model.Id, 'Term');" title="Remove tag">
                     <i class="icon-remove-circle" style="color:red;"></i>
                  </a>
               </div>
            </div>
         }
      </fieldset>
   </div>
</div>

<div class="row">
   <div class="small-12 large-6 columns">
      <fieldset>
         <legend>New Amazon Item</legend>
      </fieldset>
   </div>
</div>

@section Scripts {
   @Scripts.Render("~/bundles/sdw.editTerm")
}
