@using SeekDeepWithin.Controllers
@model SeekDeepWithin.Models.PagedViewModel<SeekDeepWithin.Pocos.Light>

@{
   ViewBag.Title = "Library";
   var scheme = Request.Url == null ? string.Empty : Request.Url.Scheme;
}
@section featured {
   <div class="panel">
      <div class="row">
         <div class="small-12 columns">
            <h3>
               <i class="icon-book mRight"></i> Library
            </h3>
         </div>
      </div>
   </div>
}
<div class="row">
   <div class="large-12 columns">
      @{
         int index = 0;
      }
      @foreach (var light in Model) {
         if (index == 0) {
            @Html.Raw("<div class=\"row\">")
         }
         var subTitle = Consts.GetTruth (light, Consts.SUB_TITLE);
         var summary = Consts.GetTruth (light, Consts.SUMMARY);
         <div class="large-4 small-12 medium-4 columns">
            <div class="sdw-panel">
               <div class="title tCenter">
                  <a href="@Url.Action("Index", "Term", new {id=light.Id}, scheme)">
                     @(light.Text)
                  </a>
                  @if (!string.IsNullOrWhiteSpace(subTitle)) {
                     <br/><small>@(subTitle)</small>
                  }
               </div>
               <div class="content small">
                  @Html.Raw(HtmlSanitizer.Sanitize (summary))
               </div>

               @*@if (book.Versions.Count == 0) {
                  <div class="tCenter" style="font-size: x-small">This book is still a work in progress!</div>
               } else if (book.Versions.Count == 1 && title == book.Versions[0].Title) {
                  var version = book.Versions [0];
                  if (version.DefaultReadChapter == 0) {
                     <div class="tCenter" style="font-size: x-small">This book is still a work in progress!</div>
                  } else {
                     <a href="@Url.Action("Index", "Read", new{ id = version.DefaultReadChapter }, scheme)" class="sdw-button white bold expand">
                        Read
                     </a>
                  }
               } else {
                  foreach (var version in book.Versions) {
                     <a href="@Url.Action("Index", "Read", new{ id = version.DefaultReadChapter }, scheme)" class="sdw-button white bold expand">
                        @version.Title
                     </a>
                  }
               }*@
            </div>
         </div>
         index++;
         if (index == 3) {
            @Html.Raw("</div>")
            index = 0;
         }
      }
      @if (index == 1) {
         <div class="large-4 medium-4 small-12 columns">&nbsp;</div>
         <div class="large-4 medium-4 small-12 columns">&nbsp;</div>
      }
      @if (index == 2) {
         <div class="large-4 medium-4 small-12 columns">&nbsp;</div>
      }
      @if (index != 0) {
         @Html.Raw("</div>")
      }
      @if (Model.TotalPages > 1) {
         <div class="row">
            <div class="small-12 large-12 columns">
               @if (Model.TotalHits > Model.Count) {
                  var startPage = 1;
                  var endPage = Model.TotalPages;
                  if (Model.TotalPages > 12) {
                     if (Model.PageNumber > 6) {
                        startPage = Model.PageNumber - 5;
                     }
                     endPage = Math.Min (Model.TotalPages, startPage + 11);
                  }
                  <div class="pagination">
                     @if (startPage != 1) {
                        <a href="@Url.Action("Index", "Library", new {page = startPage - 1}, scheme)" class="page">
                           &larr;
                        </a>
                     }
                     @for (int a = startPage; a <= endPage; a++) {
                        if (a == Model.PageNumber) {
                           <span class="page active">@(a)</span>
                        } else {
                           <a href="@Url.Action("Index", "Library", new {page = a}, scheme)" class="page">
                              @(a)
                           </a>
                        }
                     }
                     @if (endPage < Model.TotalPages) {
                        <a href="@Url.Action("Index", "Library", new {page = endPage + 1}, scheme)" class="page">
                           &rarr;
                        </a>
                     }
                  </div>
               }
            </div>
         </div>
      }
   </div>
</div>
@section scripts {
   @Scripts.Render("~/bundles/sdw.book.index")
}
