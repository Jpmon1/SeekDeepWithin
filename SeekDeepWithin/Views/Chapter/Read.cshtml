@using Newtonsoft.Json.Linq
@model SeekDeepWithin.Models.ChapterViewModel

@{
   var title = Model.SubBook.Version.Title;
   if (Model.SubBook.Name != "default") {
      title += " | " + Model.SubBook.Name;
   }
   var subBookTitle = title;
   if (Model.Name != "default") {
      title += " | " + Model.Name;
   }
   ViewBag.Title = title;
}

<div class="row">
   <div class="small-12 large-12 columns">
      <ul class="breadcrumbs" role="menubar" aria-label="breadcrumbs">
         <li role="menuitem"><a href="@Url.Action("Read", "Chapter", new { id = @Model.SubBook.Version.DefaultReadChapter })">@Model.SubBook.Version.Title</a></li>
         @if (Model.SubBook.Name != "default") {
            <li role="menuitem"><a href="@Url.Action("About", "SubBook", new { id = @Model.SubBook.Id })">@Model.SubBook.Name</a></li>
         }
         <li role="menuitem" class="current"><a href="#">@Model.Name</a></li>
         @if (Request.IsAuthenticated && User.IsInRole ("Editor")) {
            <li role="menuitem">@Html.ActionLink("Edit", "Edit", new { id = Model.Id })</li>
         }
         @if (Request.IsAuthenticated && User.IsInRole ("Creator")) {
            <li role="menuitem">@Html.ActionLink("Add", "Add", new { id = Model.Id })</li>
         }
      </ul>
   </div>
</div>

<div class="row">
   <div class="small-12 large-8 columns">
      @if (Model.Id == Model.SubBook.Version.DefaultReadChapter) {
         <h3>@subBookTitle</h3>
         <p>
            @{
               var writers = Model.SubBook.Writers.Where (w => !w.IsTranslator).ToList ();
               if (writers.Count > 0) {
                  <em>written by:</em>
                  foreach (var writer in writers) {
                     <span>@Html.ActionLink(writer.Name, "Details", "Author", new { id = writer.Id }, null) </span>
                  }
               }
               var translators = Model.SubBook.Writers.Where (w => w.IsTranslator).ToList ();
               if (translators.Count > 0) {
                  <br />
                  <em>translated by:</em>
                  foreach (var writer in translators) {
                     <span>@Html.ActionLink(writer.Name, "Details", "Author", new { id = writer.Id }, null) </span>
                  }
               }
               if (Request.IsAuthenticated && User.IsInRole ("Editor")) {
                  <small>@Html.ActionLink("[add writer]", "AssignWriter", "SubBook", new {id=Model.SubBookId}, null)</small>
               }
            }
         </p>
      }
      
      @Html.DisplayFor(model => model.Headers)
      @foreach (var passage in Model.Passages) {
         @Html.Partial("_Passage", passage)
      }
      @Html.DisplayFor(model => model.Footers)
   </div>
   <div class="small-12 large-4 columns">
      <h4>
         Contents
         @if (Request.IsAuthenticated && User.IsInRole ("Creator")) {
            <small>@Html.ActionLink("[edit]", "Contents", "Version", new { id = Model.SubBook.VersionId }, null)</small>
         }
      </h4>
      <div id="contentTree">
         @{ dynamic contents = JArray.Parse (Model.SubBook.Version.Contents); }
         @if (contents.Count > 0) {
            <ul>
               @foreach (var subBook in contents)
               {
                  var name = subBook.name;
                  var hideSb = subBook.hide ?? new JValue (false);
                  if (hideSb.Value) {
                     foreach (var chapter in subBook.chapters) {
                        var hideCh = chapter.hide ?? new JValue (false);
                        string chName = chapter.name.Value;
                        if (!hideCh.Value) {
                           <li data-jstree='{"type":"chapter"}'>@Html.ActionLink(chName, "Read", new {id = chapter.id.Value })</li>
                        }
                     }
                  } else {
                     <li data-jstree='{"opened":true, "type":"subbook"}'>
                        @name
                        @if (subBook.chapters.Count > 0) {
                           <ul>
                              @foreach (var chapter in subBook.chapters) {
                                 string chName = chapter.name.Value;
                                 var hideCh = chapter.hide ?? new JValue (false);
                                 if (!hideCh.Value) {
                                    <li data-jstree='{"type":"chapter"}'>@Html.ActionLink(chName, "Read", new { id = chapter.id.Value })</li>
                                 }
                              }
                           </ul>
                        }
                     </li>
                  }
               }
            </ul>
         }
      </div>
   </div>
</div>
<div class="row">
   <div class="small-12 large-12 columns">
      <div class="panel" style="padding: 3px 10px;">
         <small>
            source:
             @if (!string.IsNullOrWhiteSpace (Model.SubBook.Version.SourceUrl)) {
               <a href="@Model.SubBook.Version.SourceUrl" target="_blank">@Model.SubBook.Version.SourceName</a>
            } else {
               @Html.Raw("unknown")
            }
            @if (Request.IsAuthenticated && User.IsInRole ("Editor")) {
               @Html.ActionLink("[edit]", "EditSource", "Source", new { id = Model.SubBook.Version.Id, type = "version" }, null)
            }
         </small>
      </div>
   </div>
</div>
