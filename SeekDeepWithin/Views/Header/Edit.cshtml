@model SeekDeepWithin.Models.HeaderFooterEditViewModel

<h3>Header Edit</h3>

@using (Html.BeginForm (null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" })) {
   @Html.AntiForgeryToken()
}

<input type="hidden" id="itemType" name="itemType" value="@Model.ItemType" />
<input type="hidden" id="itemId" name="itemId" value="@Model.ItemId" />
<input type="hidden" id="editId" name="editId" value="0" />

<div class="row">
   <div class="small-12 columns" id="itemText">
      @Model.ItemText
   </div>
</div>

<div class="row" style="margin-top: 1.125rem">
   <div class="small-12 medium-6 large-6 columns">
      <ul class="pricing-table" id="headerList">
         <li class="title">Current Headers</li>
         @foreach (var header in Model.Items) {
            var len = header.Text.Length > 15 ? 15 : header.Text.Length;
            <li class="bullet-item" id="item_@header.Id">
               <a href="javascript:void(0)" onclick="header_edit(@header.Id)">@header.Text.Substring(0, len)</a>
            </li>
         }
      </ul>
   </div>
   <div class="small-12 medium-6 large-6 columns">
      <div class="row">
         <div class="small-12 large-12 columns">
            <label for="hfText">Text</label>
            <textarea id="hfText" name="hfText" rows="4"></textarea>
         </div>
      </div>

      <div class="row">
         <div class="small-12 medium-4 large-4 columns">
            <label for="hfJustify">Justify</label>
            <select id="hfJustify" name="hfJustify">
               <option id="justifyLeft" value="0" selected="selected">Left</option>
               <option id="justifyCenter" value="1">Center</option>
               <option id="justifyRight" value="2">Right</option>
            </select>
         </div>
         <div class="small-6 medium-4 large-4 columns text-center" style="margin-bottom: 1rem">
            <label for="hfIsBold"><i class="icon-bold"></i> Bold</label>
            <div class="switch">
               <input type="checkbox" id="hfIsBold" name="hfIsBold" />
               <label for="hfIsBold">Bold</label>
            </div>
         </div>
         <div class="small-6 medium-4 large-4 columns text-center" style="margin-bottom: 1rem">
            <label for="hfIsItalic"><i class="icon-italic"></i> Italic</label>
            <div class="switch">
               <input type="checkbox" id="hfIsItalic" name="hfIsItalic" />
               <label for="hfIsItalic">Italic</label>
            </div>
         </div>
      </div>

      <div class="row" id="rowCreate">
         <div class="small-12 columns">
            <a href="javascript:void(0)" class="button expand" onclick="header_create();">
               Create <i id="createCheck" class="icon-ok-circle" style="display: none;"></i>
            </a>
         </div>
      </div>
      <div class="row" id="rowUpdate" style="display: none;">
         <div class="small-4 columns">
            <a href="javascript:void(0)" class="button success expand" onclick="header_update();">
               Update <i id="updateCheck" class="icon-ok-circle" style="display: none;"></i>
            </a>
         </div>
         <div class="small-4 columns">
            <a href="javascript:void(0)" class="button alert expand" onclick="header_delete();">Delete</a>
         </div>
         <div class="small-4 columns">
            <a href="javascript:void(0)" class="button secondary expand" onclick="header_new();">Cancel</a>
         </div>
      </div>
   </div>
</div>
<div class="row">
   <div class="small-6 pagination-centered columns">
      <ul class="pagination" role="menubar" aria-label="Pagination" style="width: 100%">
         @if (Model.PreviousEntryId != -1) {
            <li class="arrow">
               <a href="@Url.Action("Edit", "Header", new {id = Model.PreviousEntryId, type=Model.ItemType}, Request.Url.Scheme)">&laquo; Previous Item</a>
            </li>
         }
      </ul>
   </div>
   <div class="small-6 pagination-centered columns">
      <ul class="pagination" role="menubar" aria-label="Pagination" style="width: 100%">
         @if (Model.NextEntryId != -1) {
            <li class="arrow">
               <a href="@Url.Action("Edit", "Header", new {id = Model.NextEntryId, type=Model.ItemType}, Request.Url.Scheme)">Next Item &raquo;</a>
            </li>
         }
      </ul>
   </div>
</div>

<div class="row">
   <div class="small-6 medium-3 large-3 columns">
      @if (Model.ItemType == "Entry") {
         <a href="@Url.Action("Edit", "Glossary", new {id = Model.ParentId}, Request.Url.Scheme)" class="button secondary expand">
            <i class="icon-editalt"></i> Edit Item
         </a>
      } else {
         <a href="@Url.Action("Edit", "Chapter", new {id = Model.ParentId}, Request.Url.Scheme)" class="button secondary expand">
            <i class="icon-editalt"></i> Edit Chapter
         </a>
      }
   </div>
   <div class="small-6 medium-3 large-3 columns">
      <a href="@Url.Action("Edit", "Footer", new {id=Model.ItemId, type=Model.ItemType}, Request.Url.Scheme)" class="button secondary expand">
         <i class="icon-notificationtop"></i> Edit Footers
      </a>
   </div>
   @if (Model.ItemType != "Chapter") {
      <div class="small-6 medium-3 large-3 columns">
         <a href="@Url.Action("Edit" + Model.ItemType, "Style", new {id = Model.ItemId}, Request.Url.Scheme)" class="button secondary expand">
            <i class="icon-paintroll"></i> Edit Styles
         </a>
      </div>
      <div class="small-6 medium-3 large-3 columns">
         <a href="@Url.Action("Edit" + Model.ItemType, "Link", new {id = Model.ItemId}, Request.Url.Scheme)" class="button secondary expand">
            <i class="icon-link"></i> Edit Links
         </a>
      </div>
   } else {
      <div class="small-6 medium-3 large-3 columns"></div>
      <div class="small-6 medium-3 large-3 columns"></div>
   }
</div>

@Html.Partial("_Modal")

@section scripts {
   @Scripts.Render("~/bundles/sdw.headeredit")
}
