@using SeekDeepWithin.Models
@model VersionContents

<div id="contentTree">
   @if (Model.SubBooks.Count > 0) {
      <ul class="off-canvas-list">
         @if (Request.IsAuthenticated && User.IsInRole ("Creator")) {
            <li>
               <a href="@Url.Action("Contents", "Version", new {id=Model.VersionId}, Request.Url.Scheme)">Edit Contents</a>
            </li>
         }
         @if (Request.IsAuthenticated && User.IsInRole ("Editor")) {
            <li>
               <a href="@Url.Action("Edit", "Chapter", new {id=Model.CurrentChapter}, Request.Url.Scheme)">Edit Chapter</a>
            </li>
         }
         @foreach (var subBook in Model.SubBooks) {
            if (!subBook.Hide) {
               <li><label>@subBook.Name</label></li>
            }
            foreach (var chapter in subBook.Chapters.Where(c => !c.Hide)) {
               <li>
                  <a href="@Url.Action("Index", "Read", new {id=chapter.Id}, Request.Url.Scheme)">@chapter.Name</a>
               </li>
            }
         }
      </ul>
   }
</div>
