@using SeekDeepWithin.Controllers
@using SeekDeepWithin.Models
@model SeekDeepWithin.Models.ChapterViewModel
@{
   var scheme = Request.Url == null ? string.Empty : Request.Url.Scheme;
   var contents = new VersionContents (Model.SubBook.Version.Title, Model.SubBook.Version.Contents, 
      Model.SubBook.Version.Id, Model.SubBook.Id, Model.Id);
   var title = Model.SubBook.Version.Title;
   if (!Model.SubBook.Hide) {
      title += " | ";
      title += string.IsNullOrEmpty (Model.SubBook.Alias) ? Model.SubBook.Name : Model.SubBook.Alias;
   }
   if (!Model.Hide) {
      title += " | " + Model.Name;
   }
   ViewBag.Title = title;
}
@section featured {
   <div class="panel tCenter">
      <h5 class="">
         <a href="@Url.Action("Index", "Term", new { id = @Model.SubBook.Version.Term.Id }, scheme)">@(Model.SubBook.Version.Title)</a>
         @if (!Model.SubBook.Hide) {
            <text> | </text>
            <a href="@Url.Action("Index", "Term", new { id = @Model.SubBook.Term.Id }, scheme)">
               @if (string.IsNullOrEmpty (Model.SubBook.Alias)) {
                  <text>@Model.SubBook.Name</text>
               } else {
                  <text>@Model.SubBook.Alias</text>
               }
            </a>
         }
         @if (!Model.Hide) {
            <text> | @Model.Name</text>
         }
         @if (Request.IsAuthenticated && User.IsInRole ("Editor")) {
            <span style="float: right">
               <a href="@Url.Action("Edit", "Chapter", new {id = Model.Id}, scheme)" class="sdw-button alt tiny">
                  Edit Chapter
               </a>
            </span>
         }
      </h5>
   </div>
}
<input type="hidden" id="chapterId" value="@(Model.Id)"/>
<div id="readingRow">
   <div class="row">
      <div class="small-12 medium-8 large-8 columns" id="readingArea">
         @if (Model.Header != null) {
            <div class="row">
               <div class="small-12 large-12 columns">
                  @(Html.Raw(HtmlSanitizer.Sanitize (Model.Header.Render())))
               </div>
            </div>
         }
         @foreach (var passage in Model.Passages) {
            @Html.Partial("_Passage", passage)
         }
         @if (Model.Footer != null) {
            <br/>
            <div class="footer-box">
               @(Html.Raw(HtmlSanitizer.Sanitize (Model.Footer.Render())))
            </div>
         }
         <div class="row">
            <div class="small-12 columns">
               <div class="pagination">
                  <div class="row">
                     <div class="small-6 columns">
                        @if (contents.PreviousChapter != -1) {
                           <a href="@Url.Action("Index", "Read", new { id = contents.PreviousChapter }, scheme)" class="page">
                              &laquo; Previous Chapter
                           </a>
                        }
                     </div>
                     <div class="small-6 columns">
                        @if (contents.NextChapter != -1) {
                           <a href="@Url.Action("Index", "Read", new { id = contents.NextChapter }, scheme)" class="page" style="float: right">
                              Next Chapter &raquo;
                           </a>
                        }
                     </div>
                  </div>
               </div>
            </div>
         </div>
      </div>
      <div class="small-12 medium-4 large-4 columns hide-for-small-only" id="contentContainer">
         <div class="sdw-panel" style="overflow: auto;" id="contents">
            <div class="title">Contents</div>
            <div>
               @(Html.DisplayFor(c => contents))
            </div>
         </div>
      </div>
   </div>
   <div class="footer-box" id="readBottomPanel">
      <div class="row">
         <div class="small-6 large-6 columns text-left">
            source:
            @if (!string.IsNullOrWhiteSpace (Model.SubBook.Version.SourceUrl)) {
               <a href="@(Model.SubBook.Version.SourceUrl)" target="_blank">@(Model.SubBook.Version.SourceName)</a>
            } else {
               @Html.Raw("unknown")
            }
         </div>
         <div class="small-6 large-6 columns text-right">
            @*@{
               var writers = Model.SubBook.Writers.Where (w => !w.IsTranslator).ToList ();
               writers.AddRange (Model.SubBook.Version.Writers.Where(w => !w.IsTranslator));
               if (writers.Count > 0) {
                  <em>written by:</em>
                  foreach (var writer in writers.Distinct(new WriterComparer ())) {
                     <a href="@Url.Action("Details", "Writer", new { id = writer.Id }, Request.Url.Scheme)">@writer.Name</a>
                  }
               }
               var translators = Model.SubBook.Writers.Where (w => w.IsTranslator).ToList ();
               translators.AddRange (Model.SubBook.Version.Writers.Where (w => w.IsTranslator));
               if (translators.Count > 0) {
                  <em>translated by:</em>
                  foreach (var writer in translators.Distinct(new WriterComparer ())) {
                     <a href="@Url.Action("Details", "Writer", new { id = writer.Id }, Request.Url.Scheme)">@writer.Name</a>
                  }
               }
            }*@
         </div>
      </div>
   </div>
</div>
@section scripts {
   @Scripts.Render("~/bundles/sdw.read")
}
