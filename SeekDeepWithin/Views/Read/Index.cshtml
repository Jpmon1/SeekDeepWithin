@using SeekDeepWithin.Models
@model SeekDeepWithin.Models.ChapterViewModel

@{
   var contents = new VersionContents (Model.SubBook.Version.Title, Model.SubBook.Version.Contents, 
      Model.SubBook.VersionId, Model.SubBook.Id, Model.Id);
   var title = Model.SubBook.Version.Title;
   if (!Model.SubBook.Hide) {
      title += " | " + Model.SubBook.Name;
   }
   if (!Model.Hide) {
      title += " | " + Model.Name;
   }
   ViewBag.Title = title;
}

<div class="row">
   <div class="small-12 columns">
      <div class="alert-box secondary text-center" style="padding-top: 0.5rem;padding-bottom: 0.5rem">
         <a href="@Url.Action("Index", "Read", new { id = @Model.SubBook.Version.DefaultReadChapter }, Request.Url.Scheme)">@Model.SubBook.Version.Title</a>
         @if (!Model.SubBook.Hide) {
            <text> | </text><a href="@Url.Action("About", "SubBook", new { id = @Model.SubBook.Id }, Request.Url.Scheme)">@Model.SubBook.Name</a>
         }
      </div>
   </div>
</div>

<div id="readingRow">
   <div class="row">
      <div class="small-12 large-12 columns" id="readRow">
         <div class="off-canvas-wrap" data-offcanvas style="min-height: 200px;" id="readOffCanvas">
            <div class="contain-to-grid" id="readNavBar" style="z-index: 9899;">
               <nav class="tab-bar">
                  
                  <section class="left-small text-center">
                     <a class="left-off-canvas-toggle" href="#" style="color: black;"><i class="icon-menu"></i></a>
                  </section>

                  <section class="middle tab-bar-section" style="overflow: hidden; white-space: nowrap; text-overflow: ellipsis">
                     <h1 class="title">
                        @if (!Model.Hide) {
                           <text>@Model.Name</text>
                        } else if (!Model.SubBook.Hide) {
                           <text>@Model.SubBook.Name</text>}
                        else {
                           <text>@Model.SubBook.Version.Title</text>
                        }
                     </h1>
                  </section>
               </nav>
            </div>
            <div class="inner-wrap" id="readMenuParent">
               <div class="left-off-canvas-menu" id="readMenu">
                  @Html.DisplayFor(c => contents)
               </div>

               <section class="main-section" style="margin-top:10px;" id="readArea">
                  @Html.DisplayFor(model => model.Headers)
                  @foreach (var passage in Model.Passages) {
                     @Html.Partial("_Passage", passage)
                  }
                  @if (Model.Footers.Count > 0) {
                     <br/>
                     <div class="alert-box secondary">
                        @Html.DisplayFor(model => model.Footers)
                     </div>
                  }
                  <div class="row">
                     <div class="small-6 pagination-centered columns">
                           @if (contents.PreviousChapter != -1) {
                              <ul class="pagination" role="menubar" aria-label="Pagination" style="width: 100%">
                                 <li class="arrow"><a href="@Url.Action("Index", "Read", new { id = contents.PreviousChapter }, Request.Url.Scheme)">&laquo; Previous Chapter</a></li>
                              </ul>
                           }
                     </div>
                     <div class="small-6 pagination-centered columns">
                        @if (contents.NextChapter != -1) {
                           <ul class="pagination" role="menubar" aria-label="Pagination" style="width: 100%">
                              <li class="arrow"><a href="@Url.Action("Index", "Read", new { id = contents.NextChapter }, Request.Url.Scheme)">Next Chapter &raquo;</a></li>
                           </ul>
                        }
                     </div>
                  </div>
               </section>

               <a class="exit-off-canvas" style="min-height: 200px;"></a>
            </div>
         </div>
      </div>
   </div>

   <div class="panel" style="padding: 3px 10px;" id="readBottomPanel">
      <div class="row">
         <div class="small-6 large-6 columns text-left">
            <small>
               source:
               @if (!string.IsNullOrWhiteSpace (Model.SubBook.Version.SourceUrl)) {
                  <a href="@Model.SubBook.Version.SourceUrl" target="_blank">@Model.SubBook.Version.SourceName</a>
               } else {
                  @Html.Raw("unknown")
               }
            </small>
         </div>
         <div class="small-6 large-6 columns text-right">
            @{
               var writers = Model.SubBook.Writers.Where (w => !w.IsTranslator).ToList ();
               if (writers.Count > 0) {
                  <em>written by:</em>
                  foreach (var writer in writers) {
                     <a href="@Url.Action("Details", "Writer", new { id = writer.Id }, Request.Url.Scheme)">@writer.Name</a>
                  }
               }
               var translators = Model.SubBook.Writers.Where (w => w.IsTranslator).ToList ();
               if (translators.Count > 0) {
                  <em>translated by:</em>
                  foreach (var writer in translators) {
                     <a href="@Url.Action("Details", "Writer", new { id = writer.Id }, Request.Url.Scheme)">@writer.Name</a>
                  }
               }
            }
         </div>
      </div>
   </div>
</div>
@section scripts {
   @Scripts.Render("~/bundles/sdw.read")
}
